@page "/"
@inject TaskManagerApp.Services.AuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@layout TaskManagerApp.Layout.LoginLayout
@using TaskManagerApp.Models
@using Microsoft.AspNetCore.Components.Forms
@using System.Threading.Tasks

<main>
    <div class="container">
        <section class="section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-lg-4 col-md-6 d-flex flex-column align-items-center justify-content-center">
                        <div class="d-flex justify-content-center py-4">
                            <a href="index.html" class="logo d-flex align-items-center w-auto">
                                <img src="assets/img/logo.png" alt="">
                                <span class="d-none d-lg-block">IsraelTech</span>
                            </a>
                        </div>
                        <div class="card mb-3">
                            <div class="card-body">
                                @if (!string.IsNullOrEmpty(statusMessage))
                                {
                                    <div class="alert @alertClass" role="alert">
                                        @statusMessage
                                    </div>
                                }
                                <div class="pt-4 pb-2">
                                    <h5 class="card-title text-center pb-0 fs-4">Login to Your Account</h5>
                                    <p class="text-center small">Enter your username & password to login</p>
                                </div>
                                <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />
                                    <div class="row g-3 needs-validation">
                                        <div class="col-12">
                                            <label for="yourEmail" class="form-label">Email</label>
                                            <div class="input-group has-validation">
                                                <span class="input-group-text" id="inputGroupPrepend"></span>
                                                <InputText type="email" class="form-control" id="yourEmail" @bind-Value="loginModel.Email" required />
                                                <div class="invalid-feedback">Please enter your email.</div>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <label for="yourPassword" class="form-label">Password</label>
                                            <div class="input-group">
                                                <InputText type="@passwordType" class="form-control" id="yourPassword" @bind-Value="loginModel.Password" required />
                                                <button type="button" class="btn btn-outline-secondary" @onclick="TogglePasswordVisibility">
                                                    @passwordButtonText
                                                </button>
                                            </div>
                                            <div class="invalid-feedback">Please enter your password!</div>
                                        </div>
                                        <div class="col-12">
                                            <button class="btn btn-primary w-100" type="submit">Login</button>
                                        </div>
                                        <div class="col-12">
                                            <p class="small mb-0">Don't have an account? <a href="/signup">Create an account</a></p>
                                        </div>
                                    </div>
                                </EditForm>
                            </div>
                        </div>
                        <div class="credits">
                            Designed by <a href="#">IsraelTech</a>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</main>

@code {
    private LoginModel loginModel = new LoginModel();
    private string statusMessage;
    private string alertClass = "";
    private bool showPassword = false;
    private string passwordType = "password";
    private string passwordButtonText = "Show";

    private async Task HandleLogin()
    {
        var result = await AuthenticationService.LoginAsync(loginModel);

        if (result == "Success")
        {
            statusMessage = "Login successful! Redirecting...";
            alertClass = "alert-success";
   
            NavigationManager.NavigateTo("/home");
        }
        else
        {
            statusMessage = "Login failed. Please check your email and password.";
            alertClass = "alert-danger";
        }
    }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
        passwordType = showPassword ? "text" : "password";
        passwordButtonText = showPassword ? "Hide" : "Show";
    }
}

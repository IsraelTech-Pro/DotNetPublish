@page "/signup"
@inject TaskManagerApp.Services.AuthenticationService AuthenticationService
@using TaskManagerApp.Models
@using Microsoft.AspNetCore.Components.Forms
@using System.Threading.Tasks

<main>
    <div class="container">
        <section class="section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-lg-4 col-md-6 d-flex flex-column align-items-center justify-content-center">
                        <div class="d-flex justify-content-center py-4">
                            <a href="index.html" class="logo d-flex align-items-center w-auto">
                                <img src="assets/img/logo.png" alt="">
                                <span class="d-none d-lg-block">IsraelTech</span>
                            </a>
                        </div>
                        <div class="card mb-3">
                            <div class="card-body">
                                @if (!string.IsNullOrEmpty(statusMessage))
                                {
                                    <div class="alert @alertClass" role="alert">
                                        @statusMessage
                                    </div>
                                }
                                <div class="pt-4 pb-2">
                                    <h5 class="card-title text-center pb-0 fs-4">Create an Account</h5>
                                    <p class="text-center small">Enter your personal details to create an account</p>
                                </div>
                                <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />
                                    <div class="row g-3 needs-validation">
                                        <div class="col-12">
                                            <label for="yourFirstName" class="form-label">First Name</label>
                                            <InputText type="text" class="form-control" id="yourFirstName" @bind-Value="registerModel.FirstName" required />
                                            <div class="invalid-feedback">Please, enter your first name!</div>
                                        </div>
                                        <div class="col-12">
                                            <label for="yourLastName" class="form-label">Last Name</label>
                                            <InputText type="text" class="form-control" id="yourLastName" @bind-Value="registerModel.LastName" required />
                                            <div class="invalid-feedback">Please, enter your last name!</div>
                                        </div>
                                        <div class="col-12">
                                            <label for="yourEmail" class="form-label">Email</label>
                                            <InputText type="email" class="form-control" id="yourEmail" @bind-Value="registerModel.Email" required />
                                            <div class="invalid-feedback">Please enter a valid email address!</div>
                                        </div>
                                        <div class="col-12">
                                            <label for="yourPassword" class="form-label">Password</label>
                                            <InputText type="@passwordFieldType" class="form-control" id="yourPassword" @bind-Value="registerModel.Password" required />
                                            <div class="invalid-feedback">Please enter your password!</div>
                                            <div class="form-check mt-2">
                                                <InputCheckbox id="showPassword" @bind-Value="showPassword" @onchange="TogglePasswordVisibility" />
                                                <label class="form-check-label" for="showPassword">Show Password</label>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                                            <InputText type="@passwordFieldType" class="form-control" id="confirmPassword" @bind-Value="registerModel.ConfirmPassword" required />
                                            <div class="invalid-feedback">Please confirm your password!</div>
                                        </div>
                                        <div class="col-12">
                                            <button class="btn btn-primary w-100" type="submit">Create Account</button>
                                        </div>
                                        <div class="col-12">
                                            <p class="small mb-0">Already have an account? <a href="/">Log in</a></p>
                                        </div>
                                    </div>
                                </EditForm>
                            </div>
                        </div>
                        <div class="credits">
                            Designed by <a href="#">IsraelTech</a>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</main>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string statusMessage;
    private string alertClass = "";
    private bool showPassword = false;
    private string passwordFieldType => showPassword ? "text" : "password";

    private async Task HandleRegister()
    {
        var result = await AuthenticationService.RegisterAsync(registerModel);

        if (result == "Success")
        {
            statusMessage = "Account created successfully! You can now log in.";
            alertClass = "alert-success";
        }
        else
        {
            statusMessage = "Registration failed. Please try again.";
            alertClass = "alert-danger";
        }
    }

    private void TogglePasswordVisibility(ChangeEventArgs e)
    {
        showPassword = (bool)e.Value;
    }
}
